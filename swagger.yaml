---
openapi: 3.0.0
info:
  title: CTO
  description: CTO API
  contact:
    email: dmitri.markoff@gmail.com
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/DAMarkoff/CTO/1.0.0
  description: SwaggerHub API Auto Mocking
- url: http://23.88.52.139:5006
  description: PetProgect
tags:
- name: user
  description: registration/login/activate/deactivate/delete/user_info
- name: storage
paths:
  /all:
    get:
      tags:
      - user
      summary: A JSON array of user(s) data
      description: If the user ID is not provided, returns data about all users
      parameters:
      - name: user_id
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/users'
        "405":
          description: method not allowed
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/error'
  /reg:
    post:
      tags:
      - user
      summary: new user registration
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/reg_body'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users'
        "400":
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "405":
          description: method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /login:
    post:
      tags:
      - user
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/login_body'
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hello'
        "400":
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "405":
          description: method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /deactivate_user:
    post:
      tags:
      - user
      description: mark a user as inactive by the user himself
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/deactivate_user_body'
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
              example: User {first_name last_name} has been successfully deactivated
        "400":
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "405":
          description: method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /available_storage:
    get:
      tags:
      - storage
      summary: summary here
      description: descrition here
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/storage_places'
        "405":
          description: method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
components:
  schemas:
    users:
      type: object
      properties:
        ID:
          type: integer
        active:
          type: boolean
        email:
          type: string
        f_name:
          type: string
        l_name:
          type: string
        password:
          type: string
        phone:
          type: string
    storage_places:
      type: object
      properties:
        shelf_id:
          type: integer
        size_id:
          type: integer
        size_name:
          type: integer
    hello:
      type: object
      properties:
        hello_message:
          type: string
        email:
          type: string
        user_id:
          type: integer
        token:
          type: string
    error:
      type: object
      properties:
        confirmation:
          type: string
    reg_body:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string
    login_body:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    deactivate_user_body:
      type: object
      properties:
        email:
          type: string
          format: email
        token:
          type: string
          format: uuid
        sure:
          type: boolean
      example:
        email: email@domain.com
        token: 1668ea25-e487-4c41-9c20-ea7d4fd05ec1
        sure: "False"
    inline_response_200:
      type: object
      properties:
        confirmation:
          type: string
