openapi: 3.0.0
servers:
  - description: PetProgect
    url: http://23.88.52.139:5006
info:
  description: CTO API
  version: 1.0.0
  title: Service Station
  contact:
    email: dmitri.markoff@gmail.com
tags:
  - name: users
    description: registration/login/activate/deactivate/delete/user_info
  - name: warehouse
    description: storage reports
  - name: vehicle
    description: user's vehicle(s)
  - name: storage order
    description: create/edit/delete user's tire storage order(s)
  - name: tire service order
    description: create/edit/delete user's tire service order(s)
paths:
  /users:
    get:
      tags:
      - users
      summary: A JSON array of user(s) data
      description: If the user ID is not provided, returns data about all users
      parameters: 
      - name: user_id
        in: query
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/users'
        '405':
          description: method not allowed
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/error'
    post:
      tags:
      - user
      summary: new user registration
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                phone:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '405':
          description: method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'


  /users/login:
    post:
      tags:
      - user
      #summary: login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hello'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '405':
          description: method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /users/deactivate:
    post:
      tags:
      - user
      #summary: 
      description: mark a user as inactive by the user himself
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                token:
                  type: string
                  format: uuid
                sure:
                  type: boolean
              example: 
                email: 'email@domain.com'
                token: '1668ea25-e487-4c41-9c20-ea7d4fd05ec1'
                sure: 'False'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  confirmation:
                    type: string
              example: 'User {first_name last_name} has been successfully deactivated'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '405':
          description: method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'                  
  /warehouse:
    get:
      tags:
        - storage
      summary: summary here
      description: descrition here
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/storage_places'
        '405':
          description: method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
components:
  schemas:
    users:
      type: object
      properties:
        ID:
          type: integer   
        active:
          type: boolean
        email:
          type: string
        f_name:
          type: string
        l_name:
          type: string
        password:
          type: string
        phone:
          type: string
    storage_places:
      type: object
      properties:
        shelf_id:
          type: integer
        size_id:
          type: integer
        size_name:
          type: integer
    hello:
      type: object
      properties:
        hello_message:
          type: string
        email:
          type: string
        user_id:
          type: integer
        token:
          type: string
    error:
      type: object
      properties:
        confirmation:
          type: string