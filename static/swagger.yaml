openapi: 3.0.0
servers:
  - description: PetProgect
    url: http://23.88.52.139:5006
info:
  description: |
      # pre-alpha
      **If you find any defects or have suggestions for improvement, feel free to fill out the Google forms below.**

      **I will be very grateful for any help. Thanks.**
      - [Bug Report Google Form](https://docs.google.com/forms/d/1Nh_-KE00CpirA_I4WLBXR5gWD5Gkl7KaT2u72x2CC7o/edit?usp=sharing)
      - [Suggestions for improvement](https://docs.google.com/forms/d/1mjiIaQwa0_C0FiihzpKBFCOUvVSR_PjzusJMgmsEQkM/edit?usp=sharing)
      - [Readme Google Doc](https://docs.google.com/document/d/1j8iKLZLj_GRenQDMlHrvDHJkvNcg7s8gzdzcO8gdpiA/edit?usp=sharing)
  version: 0.0.1
  title: Service Station
  contact:
    email: dmitri.markoff@gmail.com

#----------------------------------------------------------------------------------------------
    
tags:
  - name: users
    description: This suit contains API methods for operations with a user account and requests for information about user data
  - name: warehouse
    description: storage reports
  - name: vehicle
    description: user's vehicle(s)
  - name: storage order
    description: create/edit/delete user's tire storage order(s)
  - name: tire service order
    description: create/edit/delete user's tire service order(s)

#----------------------------------------------------------------------------------------------

paths:
  /users:
    get:
      tags:
      - users
      summary: A JSON array of user(s) data
      description: If the user_id is not provided, returns short info about all users
      parameters:
      - name: user_id
        in: query
        required: false
        description: |
              *optional* - the user_id must consist only of digits
        schema:
          type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/users'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '405':
          description: method not allowed
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/error'
        '503':
          description: Could not connect to the database
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/error'
    post:
      tags:
      - users
      summary: Register a new user
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: |
                      ***required*** - 1 - 30 chars, can include the space and the .,'- chars
                last_name:
                  type: string
                  description: |
                      ***required*** - 1 - 30 chars, can include the space and the .,'- chars
                email:
                  type: string
                  description: |
                      ***required*** - The email must contain @ and . chars
                password:
                  type: string
                  description: |
                      ***required*** - 8 - 32 chars, must contain at least one digit, one uppercase letter, one lowercase letter, one of the symbols $@#!%'
                phone:
                  type: string
                  description: |
                      ***required*** - Validation has not been implemented yet
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '405':
          description: method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '503':
          description: Could not connect to the database
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/error'
    put:
      tags:
      - users
      summary: Change the user info.
      description: |
                *This can only be done by the logged in user.*
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: |
                      ***required*** - Enter your email
                token:
                  type: string
                  format: uuid
                  description: |
                      ***required*** - Enter your token
                  example: faf353cd-2e44-46c5-9864-7c53426eb58a
                New first_name:
                  type: string
                  description: |
                      *optional* - 1 - 30 chars, can include the space and the .,'- chars
                New last_name:
                  type: string
                  description: |
                      *optional* - 1 - 30 chars, can include the space and the .,'- chars
                New email:
                  type: string
                  description: |
                      *optional* - The email must contain @ and . chars
                New phone:
                  type: string
                  description: |
                      *optional* - Validation has not been implemented yet
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_changed'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '405':
          description: method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '503':
          description: Could not connect to the database
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/error'
    delete:
      tags:
      - users
      summary: Delete the current user. 
      description: |
        The OpenAPI 3.0 Specification and Swagger tools does not implement DELETE requests with a request body. Open API 3.1 will fix that, see [there](github.com/OAI/OpenAPI-Specification/pull/2117). ***This can only be done with an admin password.***
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

#----------------------------------------------------------------------------------------------

  /vehicle:
    post:
      tags:
      - vehicle
      summary: Register a new user's vehicle. 
      description: |
                *This can only be done by the logged in user.*
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: |
                      ***required*** - Enter your email
                token:
                  type: string
                  format: uuid
                  description: |
                      ***required*** - Enter your token
                  example: faf353cd-2e44-46c5-9864-7c53426eb58a
                vehicle_name:
                  type: string
                  description: |
                      ***required*** -Choose the type of your vehicle. 
                  enum:
                    - bus
                    - truck
                    - car
                    - jeep
                size_name:
                  type: integer
                  description: |
                      ***required*** -Choose the size of your tires
                  enum:
                    - 14
                    - 15
                    - 16
                    - 17
                    - 18
                    - 19
                    - 20
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vehicle'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '405':
          description: method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '503':
          description: Could not connect to the database
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/error'
    put:
      tags:
      - vehicle
      summary: Change your vehicle type or tire size
      description: You can fill in only one of the new_vehicle_name or new_size_name. Or both.
                The email, token and vehicle_id are required. New_vehicle_name and new_size_name are optional.
                *This can only be done by the logged in user.*
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: |
                      ***required*** - Enter your email
                token:
                  type: string
                  format: uuid
                  description: |
                      ***required*** - Enter your token
                  example: faf353cd-2e44-46c5-9864-7c53426eb58a
                vehicle_id:
                  type: string
                  description: |
                      ***required*** - ID of your vehicle that needs to be updated
                new_vehicle_name:
                  type: string
                  description: |
                      *optional* - Choose the type of your vehicle. 
                  enum:
                    - bus
                    - truck
                    - car
                    - jeep
                new_size_name:
                  type: integer
                  description: |
                      *optional* - Choose the size of your tires
                  enum:
                    - 14
                    - 15
                    - 16
                    - 17
                    - 18
                    - 19
                    - 20
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vehicle_changed'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '405':
          description: method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '503':
          description: Could not connect to the database
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/error'
    delete:
      tags:
      - vehicle
      summary: Delete your vehicle
      description: The OpenAPI 3.0 Specification and Swagger tools does not implement DELETE requests with a request body. Open API 3.1 will fix that, see github.com/OAI/OpenAPI-Specification/pull/2117
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

#----------------------------------------------------------------------------------------------

  /users/login:
    post:
      tags:
      - users
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: |
                      ***required*** - Enter your email
                password:
                  type: string
                  description: |
                      ***required*** - Enter your password. In case you forgot your password, please feel free to contact the admin
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hello'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '405':
          description: method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '503':
          description: Could not connect to the database
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/error'

#----------------------------------------------------------------------------------------------

  /users/deactivate:
    post:
      tags:
      - users
      summary: Mark yourself as an inactive user
      description: WARNING! Only the admin can mark you as an active user again. *This can only be done by the logged in user.*
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: |
                      ***required*** - Enter your email
                token:
                  type: string
                  format: uuid
                  description: |
                      ***required*** - Enter your token
                  example: faf353cd-2e44-46c5-9864-7c53426eb58a
                sure:
                  type: string
                  description: |
                      ***required*** - Are you sure? Type 'yes' or 'no'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  confirmation:
                    type: string
              example: 'User {first_name last_name} has been successfully deactivated'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '405':
          description: method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '503':
          description: Could not connect to the database
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/error'

#----------------------------------------------------------------------------------------------

  /users/activate:
    post:
      tags:
      - users
      summary: Mark the user as active
      description: 'Note: Only the admin can mark you as an active user'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: |
                      ***required*** - Enter your email
                admin password:
                  type: string
                  format: uuid
                  description: |
                      ***required*** - Enter the admin password
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  confirmation:
                    type: string
              example: 'User {first_name last_name} has been successfully deactivated'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '405':
          description: method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '503':
          description: Could not connect to the database
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/error'
 
#----------------------------------------------------------------------------------------------
                 
  /users/user_info:
    post:
      tags:
      - users
      summary: Provides complete information about the user
      description: |
          *This can only be done by the logged in user.*
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: |
                      ***required*** - Enter your email
                token:
                  type: string
                  format: uuid
                  description: |
                      ***required*** - Enter your token
                  example: faf353cd-2e44-46c5-9864-7c53426eb58a
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_info'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '405':
          description: method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '503':
          description: Could not connect to the database
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/error'
                 
#----------------------------------------------------------------------------------------------

  /storage_order:
    post:
      tags:
      - storage order
      summary: Create new storage order
      description: | 
            The size_name OR user_vehicle_id is required. Not both of those. 
            *This can only be done by the logged in user.*
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: |
                      ***required*** - Enter your email
                token:
                  type: string
                  format: uuid
                  description: |
                      ***required*** - Enter your token
                  example: faf353cd-2e44-46c5-9864-7c53426eb58a
                start_date:
                  type: string
                  description: |
                      ***required*** - Initial storage start date
                stop_date:
                  type: string
                  description: |
                      *optional* - End date of storage start
                size_name:
                  type: integer
                  description: |
                      *optional* -Choose the size of your tires
                  enum:
                    - 14
                    - 15
                    - 16
                    - 17
                    - 18
                    - 19
                    - 20
                u_veh_id:
                  type: string
                  description: |
                      *optional* - ID of your vehicle whose tires will be stored
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage_order'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '405':
          description: method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '503':
          description: Could not connect to the database
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/error'
    put:
      tags:
      - storage order
      summary: Create new storage order
      description: | 
            *This can only be done by the logged in user.*
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: |
                      ***required*** - Enter your email
                token:
                  type: string
                  format: uuid
                  description: |
                      ***required*** - Enter your token
                  example: faf353cd-2e44-46c5-9864-7c53426eb58a
                st_ord_id:
                  type: string
                  description: |
                      ***required*** - ID of your storage order that needs to be updated
                start_date:
                  type: string
                  description: |
                      *optional* - New initial storage start date
                stop_date:
                  type: string
                  description: |
                      *optional* - New end date of storage start
                size_name:
                  type: integer
                  description: |
                      *optional* - Choose the other size of your tires
                  enum:
                    - 14
                    - 15
                    - 16
                    - 17
                    - 18
                    - 19
                    - 20
                # u_veh_id:
                #   type: string
                #   description: |
                #       *optional* - ID of your vehicle whose tires will be stored
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage_order_changed'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '405':
          description: method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '503':
          description: Could not connect to the database
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/error'
    delete:
      tags:
      - storage order
      summary: Delete your storage order
      description: The OpenAPI 3.0 Specification and Swagger tools does not implement DELETE requests with a request body. Open API 3.1 will fix that, see github.com/OAI/OpenAPI-Specification/pull/2117
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'             
                
#----------------------------------------------------------------------------------------------

  /tire_service_order:
    post:
      tags:
      - tire service order
      summary: Create a new tire service order
      description: | 
            *This can only be done by the logged in user.*
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: |
                      ***required*** - Enter your email
                token:
                  type: string
                  format: uuid
                  description: |
                      ***required*** - Enter your token
                  example: faf353cd-2e44-46c5-9864-7c53426eb58a
                order_date:
                  type: string
                  description: |
                      ***required*** - Tire service order date
                u_veh_id:
                  type: string
                  description: |
                      ***required*** - The id of your car that will be serviced
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tire_service_order'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '405':
          description: method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '503':
          description: Could not connect to the database
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/error'
    put:
      tags:
      - tire service order
      summary: Create new storage order
      description: | 
            You can change the date and time, as well as the vehicle in your tire order
            *This can only be done by the logged in user.*
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: |
                      ***required*** - Enter your email
                token:
                  type: string
                  format: uuid
                  description: |
                      ***required*** - Enter your token
                  example: faf353cd-2e44-46c5-9864-7c53426eb58a
                serv_order_id:
                  type: string
                  description: |
                      ***required*** - ID of your tire service order that needs to be updated
                new_order_date:
                  type: string
                  description: |
                      *optional* - New tire service order date
                new_u_veh_id:
                  type: string
                  description: |
                      *optional* - Fill in another vehicle id 
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tire_service_order_changed'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '405':
          description: method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '503':
          description: Could not connect to the database
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/error'
    delete:
      tags:
      - tire service order
      summary: Delete your storage order
      description: The OpenAPI 3.0 Specification and Swagger tools does not implement DELETE requests with a request body. Open API 3.1 will fix that, see github.com/OAI/OpenAPI-Specification/pull/2117
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error' 
                
#----------------------------------------------------------------------------------------------
  
  /tire_service_order/task:
    post:
      tags:
      - tire service order
      summary: You can add, update and delete a tasks in your tire service order
      description: | 
            *This can only be done by the logged in user.*
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: |
                      ***required*** - Enter your email
                token:
                  type: string
                  format: uuid
                  description: |
                      ***required*** - Enter your token
                  example: faf353cd-2e44-46c5-9864-7c53426eb58a
                service_order_id:
                  type: string
                  description: |
                      ***required*** - The id of your tire service order that will be updated
                task_name:
                  type: string
                  description: |
                      ***required*** - The task, that will be added to your tire service order
                numbers_of_task:
                  type: string
                  description: |
                      ***required*** - The number of the tasks, that will be added to your tire service order
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  confirmation:
                    type: string
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '405':
          description: method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '503':
          description: Could not connect to the database
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/error'
                
#----------------------------------------------------------------------------------------------
  
  /warehouse:
    get:
      tags:
        - warehouse
      summary: Shows info about storage shelves
      description: |
                   - if size_name is not filled in, it shows all tire sizes
                   - if available_only is 'yes', it shows only free shelves
                   - if available_only is 'no', it shows only occupied shelves
                   - if available_only neither one nor the other, it shows all free shelves
      parameters:
        - name: size_id
          in: query
          required: false
          description: | 
                *optional* - The size_id must contain only digits
          schema:
            type: string
        - name: available_only
          in: query
          required: false
          description: |
                *optional* - The available_only can be 'yes' or 'no'. Or empty.
          schema:
            type: string 
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/storage_places'
        '405':
          description: method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

#----------------------------------------------------------------------------------------------
#----------------------------------------------------------------------------------------------

components:
  schemas:
    tire_service_order_changed:
      type: object
      properties:
        tire service order:
          type: string
        old_vehicle_id:
          type: string
        new_vehicle_id:
          type: string
        old_order_date:
          type: string
        new_order_date:
          type: string
    tire_service_order:
      type: object
      properties:
        service_order_id:
          type: string
        date:
          type: string
        manager_id:
          type: string
        manager_first_name:
          type: string
        manager_last_name:
          type: string
        manager_phone:
          type: string  
        manager_email:
          type: string  
    storage_order_changed:
      type: object
      properties:
        storage_order:
          type: string
        new_start_date:
          type: string
        new_stop_date:
          type: string
        new_size_id:
          type: string
        old_size_id:
          type: string
        new_shelf_id:
          type: string
        old_shelf_id:
          type: string  
    storage_order:
      type: object
      properties:
        shelf_id:
          type: integer
        storage order id:
          type: integer
    user_info:
      type: object
      properties:
        your info:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              first_name:
                type: string
              last_name:
                type: string
              email:
                type: string
              phone:
                type: string
        storage orders info:
          oneOf:
            - type: string
            - type: object
              properties:
                storage orders info:
                  type: string
            - type: array
              items:
                type: object
                properties:
                  storage_order_id:
                    type: string
                  start_date:
                    type: string
                  stop_date:
                    type: string
                  order cost:
                    type: string
                  shelf_id:
                    type: string
        your vehicle(s):
          oneOf:
            - type: string
            - type: object
              properties:
                your vehicle(s):
                  type: string
            - type: array
              items:
                type: object
                properties:
                  vehicle_id:
                    type: string
                  vehicle_name:
                    type: string
                  size_name:
                    type: string
        tire service order(s):
           oneOf:
            - type: string
            - type: object
              properties:
                tire service order(s):
                  type: string
            - type: array
              items:
                type: object
                properties:
                  serv_order_id:
                    type: string
                  serv_order_date:
                   type: string
                  manager_id:
                    type: string
                  vehicle_id:
                    type: string
                  service order cost:
                    type: string
                  tasks:
                    oneOf:
                    - type: string
                    - type: object
                      properties:
                        tasks:
                          type: string
                    - type: array
                      items:
                        type: object
                        properties:
                          task_name:
                            type: string
                          worker_id:
                           type: string
                          task cost:
                            type: string
    users:
      type: object
      properties:
        ID:
          type: integer
        active:
          type: boolean
        email:
          type: string
        f_name:
          type: string
        l_name:
          type: string
        hash-password:
          type: string
        salt:
          type: string
        phone:
          type: string
    user_changed:
      type: object
      properties:
        user_id:
          type: integer
        new first name:
          type: string
        old first name:
          type: string
        new last name:
          type: string
        old last name:
          type: string
        new email:
          type: string
        old email:
          type: string
        new phone:
          type: string
        old phone:
          type: string
    vehicle:
      type: object
      properties:
        vehicle_id:
          type: string
        vehicle_name:
          type: string
        size_name:
          type: string
    vehicle_changed:
      type: object
      properties:
        vehicle_id:
          type: string
        old_vehicle_name:
          type: string
        new_vehicle_name:
          type: string
        old_size_name:
          type: string
        new_size_name:
          type: string
    storage_places:
      type: object
      properties:
        shelf_id:
          type: integer
        size_id:
          type: integer
        size_name:
          type: integer
    hello:
      type: object
      properties:
        hello_message:
          type: string
        email:
          type: string
        user_id:
          type: integer
        token:
          type: string
    error:
      type: object
      properties:
        confirmation:
          type: string